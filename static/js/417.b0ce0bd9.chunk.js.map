{"version":3,"file":"static/js/417.b0ce0bd9.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","defaultImages/defaultImages.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  shadow\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: ${p => p.theme.space[4]}px;\n`;\nexport const ListItem = styled.li`\n  padding-bottom: ${p => p.theme.space[5]}px;\n  flex-basis: calc((100% - ${p => p.theme.space[4]}px*2) / 3);\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - ${p => p.theme.space[4]}px*3) / 4);\n  }\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - ${p => p.theme.space[4]}px*4) / 5);\n  }\n`;\nexport const Wrapper = styled.div`\n  height: 60px;\n  @media screen and (min-width: 768px) {\n    height: 50px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 45px;\n  }\n`;\nexport const Img = styled.img`\n  object-fit: cover;\n  display: block;\n  height: 200px;\n  width: 100%;\n\n  @media screen and (min-width: 320px) {\n    height: 250px;\n  }\n  @media screen and (min-width: 768px) {\n    height: 350px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 500px;\n  }\n`;\n","import { DEF_PATH, NO_PHOTO } from 'defaultImages/defaultImages';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { List, ListItem, Wrapper, Img } from './Cast.styled';\nimport { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <Box p=\"4\">\n      {cast.length !== 0 ? (\n        <List>\n          {cast.map(({ name, profile_path, id, character }) => {\n            return (\n              <ListItem key={id}>\n                <div>\n                  <Img\n                    src={profile_path ? DEF_PATH + profile_path : NO_PHOTO}\n                    alt={name}\n                  />\n                  <Wrapper>\n                    <Box as=\"p\" textAlign=\"center\">\n                      {name}\n                    </Box>\n                    <Box as=\"p\" textAlign=\"center\">\n                      Character: {character}\n                    </Box>\n                  </Wrapper>\n                </div>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p>We don't have any information here</p>\n      )}\n    </Box>\n  );\n};\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Cast;\n","export const DEF_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const DEF_IMG =\n  'https://en-images.kinorium.com/movie/1080/1662246.jpg?1556722314';\nexport const NO_PHOTO =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_z58Dz951_gGtjU3bYqGsTCKODu_RRAh3WcZ7dfanzNN-vBi6WcjBpf6Rr4sa6qcdlrQ&usqp=CAU';\n","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a56dfce00590e00de6e7abfd96a9065d';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await Axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n\nexport const fetchSearchMovies = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query,\n  });\n  try {\n    const response = await Axios.get(`search/movie?${params}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await Axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await Axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","color","space","layout","flexbox","border","typography","shadow","List","p","theme","ListItem","Wrapper","Img","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","response","console","log","getMovieCast","length","map","name","profile_path","id","character","src","DEF_PATH","NO_PHOTO","alt","as","textAlign","DEF_IMG","Axios","API_KEY","fetchTrending","data","results","fetchSearchMovies","query","params","URLSearchParams","api_key","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}