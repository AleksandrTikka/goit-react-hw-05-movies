{"version":3,"file":"static/js/844.d8982a80.chunk.js","mappings":"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","sources":["components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","defaultImages/defaultImages.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport { DEF_PATH, DEF_IMG } from 'defaultImages/defaultImages';\n\nconst MoviesItem = ({ movie }) => {\n  const location = useLocation();\n  const { id, poster_path, title } = movie;\n  return (\n    <>\n      <li>\n        <NavLink to={`/movies/${id}`} state={{ from: location }}>\n          <img\n            src={poster_path ? DEF_PATH + poster_path : DEF_IMG}\n            alt={title}\n          />\n          <h3>{title}</h3>\n        </NavLink>\n      </li>\n    </>\n  );\n};\nexport default MoviesItem;\n","import MoviesItem from 'components/MoviesItem';\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <MoviesItem movie={movie} key={movie.id} />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default MoviesList;\n","export const DEF_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const DEF_IMG =\n  'https://en-images.kinorium.com/movie/1080/1662246.jpg?1556722314';\nexport const NO_PHOTO =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_z58Dz951_gGtjU3bYqGsTCKODu_RRAh3WcZ7dfanzNN-vBi6WcjBpf6Rr4sa6qcdlrQ&usqp=CAU';\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[5]}px;\n  gap: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled.input`\n  width: 50%;\n  /* height: 30px; */\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.normal};\n  outline: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.bgButton};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  transition: ${p => p.theme.transition.transform};\n  transition: ${p => p.theme.transition.bgColor};\n  :hover,\n  :focus {\n    transform: scale(1.2);\n    background-color: ${p => p.theme.colors.bgButtonHover};\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Input, Button } from './Searchbar.styled';\n\nexport default function Searchbar({ getSearchQuery }) {\n  const [input, setInput] = useState('');\n\n  const handleInputChange = e => {\n    setInput(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    input.trim() === ''\n      ? alert('Search input is empty... Please enter a new word')\n      : getSearchQuery(input);\n    setInput('');\n  };\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"input\"\n          value={input}\n          onChange={handleInputChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          // autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </div>\n  );\n}\n// export default Searchbar;\n","import { useState, useEffect } from 'react';\nimport Searchbar from 'components/Searchbar';\nimport MoviesList from 'components/MoviesList';\nimport { fetchSearchMovies } from 'services/api';\nimport Loader from 'components/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const newQuery = query => {\n    const newParams = query !== '' ? { query } : {};\n    setSearchParams(newParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    async function getMomies() {\n      try {\n        setStatus('pending');\n        const response = await fetchSearchMovies(movieName);\n        setMovies(response);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.log(error);\n      }\n    }\n    getMomies();\n  }, [movieName]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    async function getMomies() {\n      try {\n        setStatus('pending');\n        const response = await fetchSearchMovies(query);\n        setMovies(response);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        console.log(error);\n      }\n    }\n    getMomies();\n  }, [query]);\n  const handleSearchQuery = input => {\n    setQuery(input.trim());\n    newQuery(input.trim());\n  };\n\n  return (\n    <div>\n      <Searchbar getSearchQuery={handleSearchQuery} />\n\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {status === 'pending' && <Loader />}\n    </div>\n  );\n};\nexport default Movies;\n","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a56dfce00590e00de6e7abfd96a9065d';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await Axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n\nexport const fetchSearchMovies = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query,\n  });\n  try {\n    const response = await Axios.get(`search/movie?${params}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await Axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await Axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movie","location","useLocation","id","poster_path","title","to","state","from","src","DEF_PATH","DEF_IMG","alt","movies","map","NO_PHOTO","Form","styled","p","theme","space","Input","borders","normal","none","radii","sm","Button","colors","white","bgButton","fontWeights","bold","transition","transform","bgColor","bgButtonHover","Searchbar","getSearchQuery","useState","input","setInput","onSubmit","e","preventDefault","trim","alert","name","value","onChange","target","toLowerCase","type","autoComplete","placeholder","setMovies","query","setQuery","status","setStatus","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","fetchSearchMovies","response","console","log","getMomies","newQuery","length","MoviesList","Loader","Axios","API_KEY","fetchTrending","data","results","params","URLSearchParams","api_key","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}