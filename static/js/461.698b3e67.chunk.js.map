{"version":3,"file":"static/js/461.698b3e67.chunk.js","mappings":"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","sources":["defaultImages/defaultImages.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["export const DEF_PATH = 'https://www.themoviedb.org/t/p/w500';\nexport const DEF_IMG =\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/No_poster.svg/1024px-No_poster.svg.png';\n","import { DEF_PATH, DEF_IMG } from 'defaultImages/defaultImages';\nconst MovieCard = ({ movie }) => {\n  const { title, vote_average, poster_path, overview, genres, release_date } =\n    movie;\n  return (\n    <>\n      <img src={poster_path ? DEF_PATH + poster_path : DEF_IMG} alt={title} />\n      <div>\n        <h2>\n          {title} ({release_date.slice(0, 4)})\n        </h2>\n        <p>User Score:{vote_average}</p>\n        <h3>Owerview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(genre => genre.name)}</p>\n      </div>\n    </>\n  );\n};\nexport default MovieCard;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const BackButton = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.border};\n  border-radius: ${p => p.theme.radii.sm};\n  padding: ${p => p.theme.space[1]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  margin: ${p => p.theme.space[1]}px;\n`;\n","import {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  //   useNavigate,\n} from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieDetails } from 'services/api';\nimport MovieCard from 'components/MovieCard';\nimport Loader from 'components/Loader';\nimport { HiArrowSmLeft } from 'react-icons/hi';\nimport { BackButton } from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  //   const navigate = useNavigate();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const response = await fetchMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n  if (!movie) {\n    return null;\n  }\n  //   const handleSubmit = () => {\n  //     navigate({ backLinkHref }, { replace: true });\n  //   };\n\n  return (\n    <div>\n      {/* <button type=\"button\" onClick={handleSubmit}>\n        Go back\n      </button> */}\n      <BackButton to={backLinkHref}>\n        <HiArrowSmLeft size=\"16px\" />\n        Go back\n      </BackButton>\n      <div>\n        <MovieCard movie={movie} />\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a56dfce00590e00de6e7abfd96a9065d';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await Axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n\nexport const fetchSearchMovies = async query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    query,\n  });\n  try {\n    const response = await Axios.get(`search/movie?${params}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await Axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await Axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReview = async movieId => {\n  try {\n    const response = Axios.get(`movie/${movieId}/review?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["DEF_PATH","DEF_IMG","movie","title","vote_average","poster_path","overview","genres","release_date","src","alt","slice","map","genre","name","BackButton","styled","NavLink","p","theme","borders","normal","colors","border","radii","sm","space","text","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","response","console","log","getMovieDetails","to","size","Suspense","fallback","Loader","Axios","API_KEY","fetchTrending","data","results","fetchSearchMovies","query","params","URLSearchParams","api_key","fetchMovieCast","cast"],"sourceRoot":""}